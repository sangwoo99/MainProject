//var sessionUser = <%=session.getAttribute("user") %>;
//var sessionUno = sessionUser.uNo;
var sessionUno = 10001;

function insertReply(){
		var replyParam = $('#t_replyForm').serialize();
		console.log(replyParam);
		$('#trContent').val('');
		
		$.ajax({
			url:"t_insertReply.do",
			type: "GET",
			data: replyParam,
			contentType : "application/json; charset=UTF-8",
			dataType: "json",
			success: function(result){
				console.log(result);
				result="<tr id='trNo"+result.trNo+"'>"
					+"<td>"+result.userVO.uPic+"</td>"
					+"<th>"+result.userVO.uNick+"</th>"
					+"<td>"+result.trContent+"</td>"
					+"<td>"+result.trCredate+"</td>"
					+"<td><button class='heayo_btn' onclick='editReply("+result.trNo+","+result.tNo+");'>수정</button></td>"
					+"<td><button class='heayo_btn' onclick='deleteReply("+result.trNo+");'>삭제</button></td>"
					+"</tr>";
				$('#t_replyTable').append(result);
			}
		});
}


function deleteReply(trNo){
	var replyParam = {"trNo":trNo}
	console.log(replyParam);
	$.ajax({
		url:"t_deleteReply.do",
		type: "GET",
		contentType : "application/json; charset=UTF-8",
		data: replyParam,
		dataType: "json",
		success: function(result){
			console.log(result);
			if(result == 1 ){
				$('#trNo'+trNo).remove();
			}
		}
	});
}

function editReply(trNo,tNo){
	var uPic = $('#trNo'+trNo).children().eq(0).text();
	var uNick = $('#trNo'+trNo).children().eq(1).text();
	var trContent = $('#trNo'+trNo).children().eq(2).text();
	var trCredate = $('#trNo'+trNo).children().eq(3).text();
	console.log(uPic+","+uNick+","+trContent+","+trCredate);
	updateReplyInput = "<td>"+uPic+"</td>"
					+"<th>"+uNick+"</th>"
					+"<td><textarea cols='40' rows='3' id='updateTrContent'"
					+"name='updateTrContent'>"+trContent+"</textarea></td>"
					+"<td>"+trCredate+"</td>"
					+"<td><button class='heayo_btn' onclick='updateReply("+trNo+");'>등록</button></a></td>"
					+"<td><button class='heayo_btn' onclick='cancleReply("+trNo+","+tNo+",\""+trContent+"\");'>취소</button></a></td>";
	$('#trNo'+trNo).html(updateReplyInput);	
}

function cancleReply(trNo,tNo,trContent){
	var uPic = $('#trNo'+trNo).children().eq(0).text();
	var uNick = $('#trNo'+trNo).children().eq(1).text();
	var trCredate = $('#trNo'+trNo).children().eq(3).text();
	
	updateReplyInput = "<td>"+uPic+"</td>"
					+"<th>"+uNick+"</th>"
					+"<td>"+trContent+"</td>"
					+"<td>"+trCredate+"</td>"
					+"<td><button class='heayo_btn' onclick='editReply("+trNo+","+tNo+");'>수정</button></td>"
					+"<td><button class='heayo_btn' onclick='deleteReply("+trNo+");'>삭제</button></td>";
	console.log(uPic+","+uNick+","+trContent+","+trCredate);
	$('#trNo'+trNo).html(updateReplyInput);
}

function updateReply(trNo){
	var trContent = $('#updateTrContent').val();
	var param = {"trNo":trNo, "trContent":trContent}
	console.log(param);
	$.ajax({
		url:"t_updateReply.do",
		type: "GET",
		contentType : "application/json; charset=UTF-8",
		data: param,
		success: function(result){
			console.log(result);
			var	t_reply_content = "<tr id='trNo"+result.trNo+"'>"
				 + "<td>"+result.userVO.uPic+"</td>"
				 + "<th>"+result.userVO.uNick+"</th>"
				 + "<td>"+result.trContent+"</td>"
				 + "<td>"+result.trCredate+"</td>"
				 + "<td><button class='heayo_btn' onclick='editReply("+trNo+","+result.tNo+");'>수정</button></td>"
				 + "<td><button class='heayo_btn' onclick='deleteReply("+trNo+");'>삭제</button></td>"
				 + "</tr>";
			console.log(t_reply_content);
			$('#trNo'+trNo).replaceWith(t_reply_content);
		}
	});
}

function checkJoin(tNo,tJoinNow,tJoinMax){
	console.log("tNo: "+tNo+",tJoinNow: "+tJoinNow+",tJoinMax: "+tJoinMax);
	
	var joinOrCancle= $('#tJoinButton').text();
	
	if(tJoinNow >= tJoinMax){
		alert("이미 정원이 다 찼습니다.");
	}else{
		var param = {"tNo":tNo,"joinOrCancle":joinOrCancle};
		console.log(param);
		$.ajax({
			url:"t_checkJoin.do",
			type: "GET",
			data: param,
			dataType: 'json',
			contentType : "application/json; charset=UTF-8",
			success: function(result){
				console.log(result);
				$('#tJoinNow').text(result.tJoinNow);
				if(joinOrCancle == '참여하기'){
					$('#tJoinButton').text('참여취소');
				}else if(joinOrCancle == '참여취소'){
					$('#tJoinButton').text('참여하기');
				}
				
			}
		});
	}
}

function checkBookmark(tNo){
	var bookmark = $('.tBookmark').text();
	console.log(tNo+","+bookmark);
	var param = {"tNo":tNo,"bookmark":bookmark};
	$.ajax({
		url:"t_checkBookmark.do",
		type: "GET",
		dataType: 'json',
		data: param,
		contentType : "application/json; charset=UTF-8",
		success: function(result){
			console.log(result);
			if(result == 1){
				$('.tBookmark').addClass('select');
				$('.tBookmark').text(1);
			}else if(result == 0){
				$('.tBookmark').removeClass('select');
				$('.tBookmark').text(0);
			}
		}
	});
}

var mapContainer = document.getElementById("map"), // 지도를 표시할 div
mapOption = {
    center: new daum.maps.LatLng(37.537187, 127.005476), // 지도의 중심좌표
    level: 5 // 지도의 확대 레벨
};
console.log(mapContainer);

//지도를 미리 생성
var map = new daum.maps.Map(mapContainer, mapOption);
//주소-좌표 변환 객체를 생성
var geocoder = new daum.maps.services.Geocoder();
//마커를 미리 생성
var marker = new daum.maps.Marker({
    position: new daum.maps.LatLng(37.537187, 127.005476),
    map: map
});

/*우편번호 찾기 */
function PostCode() {
    new daum.Postcode({
        oncomplete: function(data) {
            var addr = data.address; // 최종 주소 변수

            // 주소 정보를 해당 필드에 넣는다.
            document.getElementById("searchLoc").value = addr;
            // 주소로 상세 정보를 검색
            console.log(geocoder);
            geocoder.addressSearch(data.address, function(results, status) {
                // 정상적으로 검색이 완료됐으면
                if (status === daum.maps.services.Status.OK) {

                    var result = results[0]; //첫번째 결과의 값을 활용
                    console.log(result);
                    // 해당 주소에 대한 좌표를 받아서
                    var coords = new daum.maps.LatLng(result.y, result.x);
                    console.log(result.y);
                    locx.setAttribute("value",result.y);
                    locy.setAttribute("value",result.x);
                    // 지도를 보여준다.
                    mapContainer.style.display = "block";
                    map.relayout();
                    // 지도 중심을 변경한다.
                    map.setCenter(coords);
                    // 마커를 결과값으로 받은 위치로 옮긴다.
                    marker.setPosition(coords)
                }
            });
        }
    }).open();
}

